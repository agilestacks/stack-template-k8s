---
version: 1
kind: component
meta:
  name: stack-k8s-aws
  brief: Kubernetes on AWS

requires:
  - aws

provides:
  - kubernetes

lifecycle:
  readyConditions:
    - dns: ${dns.domain}
      url: https://${dns.domain}/api/v1/

parameters:
  - name: terraform.bucket.name
    env: STATE_BUCKET
  - name: terraform.bucket.region
    env: STATE_REGION
  - name: component.kubernetes
    kind: user
    parameters:
    - name: bastionHost
    - name: natEipAllocations
    - name: existingVpc
      empty: allow
    - name: vpcCidrBlock
    - name: existingMasterSubnetIds
      empty: allow
    - name: existingWorkerSubnetIds
      empty: allow
    - name: multiAz
  - name: component.kubernetes.master
    kind: user
    parameters:
    - name: count
    - name: size
    - name: spotPrice
      empty: allow
    - name: elb
  - name: component.kubernetes.worker
    kind: user
    parameters:
    - name: count
    - name: size
    - name: spotPrice
      empty: allow
    - name: natGw
  - name: component.kubernetes.etcd
    kind: user
    parameters:
    - name: count
    - name: size
    - name: spotPrice
      empty: allow
    - name: internal

outputs:
  - name: dns.domain
    brief: Cluster domain
    fromTfVar: base_domain
  - name: docker.registry
    brief: Docker repository that has been created with the stack-k8s-aws
    fromTfVar: ecr_repository
  - name: nfs.server
    brief: NFS (EFS) server endpoint
    fromTfVar: efs_endpoint
  - name: cloud.bucket
    brief: S3 bucket used as file storage for current cluster
    fromTfVar: s3_bucket
  - name: cloud.vpc.id
    fromTfVar: vpc
  - name: cloud.vpc.cidr
    fromTfVar: vpc_cidr_block
